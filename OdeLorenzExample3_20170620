import scipy.integrate
import numpy as np
import mpl_toolkits.mplot3d
import matplotlib.pyplot as plt


def lorenz(w, t, p, r, b):
    # 给出位置矢量w，和三个参数p, r, b计算出
    # dx/dt, dy/dt, dz/dt的值
    x, y, z = w.tolist()
    # 直接与lorenz的计算公式对应
    dx = p * (y - x)
    dy = x * (r - z) - y
    dz = x * y - b * z
    # return p * (y - x), x * (r - z) - y, x * y - b * z
    return dx, dy, dz


t = np.arange(0, 30, 0.02)  # 创建时间点
# 调用ode对lorenz进行求解, 用两个不同的初始值
track1 = scipy.integrate.odeint(lorenz, (0.0, 1.00, 0.0), t, args=(10.0, 28.0, 3.0))  # args 即前面系统里的参数 p，r，b
track2 = scipy.integrate.odeint(lorenz, (0.0, 1.01, 0.0), t, args=(10.0, 28.0, 3.0))

# 绘图
fig = plt.figure()
ax = mpl_toolkits.mplot3d.Axes3D(fig)
ax.plot(track1[:, 0], track1[:, 1], track1[:, 2], lw=1)
ax.plot(track2[:, 0], track2[:, 1], track2[:, 2], lw=1)
plt.show()
